<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mybook.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.mybook.vo.User" >
    <id column="u_id" property="uId" jdbcType="INTEGER" />
    <result column="u_name" property="uName" jdbcType="VARCHAR" />
    <result column="u_pwd" property="uPwd" jdbcType="VARCHAR" />
    <result column="c_id" property="cId" jdbcType="INTEGER" />
    <result column="u_phone" property="uPhone" jdbcType="VARCHAR" />
    <result column="u_emil" property="uEmil" jdbcType="VARCHAR" />
    <result column="u_profession" property="uProfession" jdbcType="VARCHAR" />
    <result column="u_head" property="uHead" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    u_id, u_name, u_pwd, c_id, u_phone, u_emil, u_profession, u_head
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where u_id = #{uId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where u_id = #{uId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mybook.vo.User" >
    insert into t_user (u_id, u_name, u_pwd, 
      c_id, u_phone, u_emil, 
      u_profession, u_head)
    values (#{uId,jdbcType=INTEGER}, #{uName,jdbcType=VARCHAR}, #{uPwd,jdbcType=VARCHAR}, 
      #{cId,jdbcType=INTEGER}, #{uPhone,jdbcType=VARCHAR}, #{uEmil,jdbcType=VARCHAR}, 
      #{uProfession,jdbcType=VARCHAR}, #{uHead,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mybook.vo.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        u_id,
      </if>
      <if test="uName != null" >
        u_name,
      </if>
      <if test="uPwd != null" >
        u_pwd,
      </if>
      <if test="cId != null" >
        c_id,
      </if>
      <if test="uPhone != null" >
        u_phone,
      </if>
      <if test="uEmil != null" >
        u_emil,
      </if>
      <if test="uProfession != null" >
        u_profession,
      </if>
      <if test="uHead != null" >
        u_head,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="uName != null" >
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPwd != null" >
        #{uPwd,jdbcType=VARCHAR},
      </if>
      <if test="cId != null" >
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="uPhone != null" >
        #{uPhone,jdbcType=VARCHAR},
      </if>
      <if test="uEmil != null" >
        #{uEmil,jdbcType=VARCHAR},
      </if>
      <if test="uProfession != null" >
        #{uProfession,jdbcType=VARCHAR},
      </if>
      <if test="uHead != null" >
        #{uHead,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mybook.vo.User" >
    update t_user
    <set >
      <if test="uName != null" >
        u_name = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPwd != null" >
        u_pwd = #{uPwd,jdbcType=VARCHAR},
      </if>
      <if test="cId != null" >
        c_id = #{cId,jdbcType=INTEGER},
      </if>
      <if test="uPhone != null" >
        u_phone = #{uPhone,jdbcType=VARCHAR},
      </if>
      <if test="uEmil != null" >
        u_emil = #{uEmil,jdbcType=VARCHAR},
      </if>
      <if test="uProfession != null" >
        u_profession = #{uProfession,jdbcType=VARCHAR},
      </if>
      <if test="uHead != null" >
        u_head = #{uHead,jdbcType=INTEGER},
      </if>
    </set>
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mybook.vo.User" >
    update t_user
    set u_name = #{uName,jdbcType=VARCHAR},
      u_pwd = #{uPwd,jdbcType=VARCHAR},
      c_id = #{cId,jdbcType=INTEGER},
      u_phone = #{uPhone,jdbcType=VARCHAR},
      u_emil = #{uEmil,jdbcType=VARCHAR},
      u_profession = #{uProfession,jdbcType=VARCHAR},
      u_head = #{uHead,jdbcType=INTEGER}
    where u_id = #{uId,jdbcType=INTEGER}
  </update>

  <!-- 通过用户名查询用户记录，返回用户对象 -->
  <select id="queryUserByName" parameterType="string" resultType="com.mybook.vo.User">
    select
    <include refid="Base_Column_List"/>
    from
    t_user
    where
    u_name = #{uName}
  </select>

  <!--注册用户-->
  <insert id="registerUser" parameterType="com.mybook.vo.User">
        insert into
        t_user (u_name , u_pwd)
        values
        (#{uName,jdbcType=VARCHAR} , #{uPwd,jdbcType=VARCHAR})
</insert>

  <!--查询用户列表-->
  <select id="selectByParams" parameterType="com.mybook.query.UserQuery" resultType="com.mybook.vo.User">
    select
    <include refid="Base_Column_List"/>
    from
    t_user
    <where>
      <!-- 用户名查询 -->
      <if test="null != uName and uName != ''">
        and u_name like concat('%',#{uName},'%')
      </if>
      <!-- 手机号查询 -->
      <if test="null != uPhone and uPhone != ''">
        and u_phone like concat('%',#{uPhone},'%')
      </if>
      <!-- 邮箱查询 -->
      <if test="null != uEmil and uEmil != ''">
        and u_emil like concat('%',#{uEmil},'%')
      </if>

      <if test="null != uProfession and uProfession != ''">
        and u_profession like concat('%',#{uProfession},'%')
      </if>
    </where>
  </select>

  <!--删除用户-->
  <delete id="deleteBatch" >
    delete from
    t_user
    where
    u_id
    in
    <foreach collection="array" item="uId" open="(" close=")" separator=",">
      #{uId}
    </foreach>
  </delete>
  <!--  根据手机号查询-->
  <select id="queryByUphone" parameterType="java.lang.String" resultType="com.mybook.vo.User">
        select
        *
        from
        t_user
        where
        u_phone = #{uPhone}
        </select>

  <!--  根据邮箱查询-->
  <select id="queryByUemil" parameterType="java.lang.String" resultType="com.mybook.vo.User">
        select
        *
        from
        t_user
        where
        u_emil = #{uEmil}
        </select>
</mapper>